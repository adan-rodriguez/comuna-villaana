---
import Isologo from "./Isologo.astro";
import MenuIcon from "./icons/MenuIcon.astro";
import XIcon from "./icons/XIcon.astro";
import MenuList from "./MenuList.astro";

const menu = [
  {
    text: "Mi Pueblo",
    links: [
      { text: "Turismo", href: "/turismo" },
      {
        text: "Galería",
        links: [
          { text: "Fotos", href: "/fotos" },
          { text: "Videos", href: "/videos" },
        ],
      },
      { text: "Historia", href: "/historia" },
      // { text: "La Forestal", href: "#" },
      // { text: "Instituciones", href: "#" },
    ],
  },
  {
    text: "Gobierno",
    links: [
      { text: "Autoridades", href: "/autoridades" },
      // { text: "Noticias", href: "#" },
      { text: "Trámites", href: "/tramites" },
      { text: "Contacto", href: "/contacto" },
    ],
  },
  {
    text: "Ciudadanía",
    links: [
      { text: "Contactos Útiles", href: "/contactosutiles" },
      { text: "Sitios de interés", href: "/sitiosdeinteres" },
    ],
  },
];
---

<header class="main-header">
  <div class="main-header-container">
    <a
      class="logo-link"
      href="/"
      aria-label="Link que lleva a la página principal"
    >
      <Isologo />
    </a>
    <button
      class="menu-btn"
      aria-label="Abrir menú"
      aria-expanded="false"
      aria-controls="menu"
    >
      <MenuIcon />
      <XIcon class="close-menu-icon" />
    </button>
    <nav class="menu">
      <MenuList items={menu} />
    </nav>
  </div>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const $menuBtn = document.querySelector(".menu-btn");
    const $menu = document.querySelector(".menu");
    const mq = window.matchMedia("(width >= 768px)");

    const focusableElementsString =
      'a, button, input, textarea, select, details, [tabindex]:not([tabindex="-1"])';

    function trapFocus(e) {
      if (e.key === "Tab") {
        const $focusedElement = document.activeElement;
        const $$focusableElements = [
          ...$menu.querySelectorAll(focusableElementsString),
        ];
        const $$visibleFocusableElements = $$focusableElements.filter(
          (el) => el.clientHeight > 0
        );
        const $lastFocusableElement =
          $$visibleFocusableElements[$$visibleFocusableElements.length - 1];
        if (e.shiftKey) {
          if ($focusedElement === $menuBtn) {
            e.preventDefault();
            $lastFocusableElement.focus();
          }
        } else {
          if ($focusedElement === $lastFocusableElement) {
            e.preventDefault();
            $menuBtn.focus();
          }
        }
      }
    }

    function closeMenu() {
      $menu.classList.remove("open");
      $menuBtn.setAttribute("aria-label", "Abrir menú");
      $menuBtn.setAttribute("aria-expanded", "false");
      document.removeEventListener("keydown", trapFocus);
      mq.removeEventListener("change", closeMenu);
    }

    function handleClickMenuBtn() {
      if ($menuBtn.matches("[aria-expanded='false']")) {
        $menu.classList.add("open");
        $menuBtn.setAttribute("aria-label", "Cerrar menú");
        $menuBtn.setAttribute("aria-expanded", "true");
        window.scrollTo({ top: 0, behavior: "smooth" });
        document.addEventListener("keydown", trapFocus);
        mq.addEventListener("change", closeMenu);
      } else {
        closeMenu();
      }
    }

    function handleClickMenu(e) {
      const $clickedElement = e.target;
      if ($clickedElement.matches(".dropdown-btn")) {
        const isExpanded =
          !$clickedElement.nextElementSibling.classList.toggle("open");
        if (isExpanded) {
          $clickedElement.setAttribute("aria-expanded", "false");
        } else {
          $clickedElement.setAttribute("aria-expanded", "true");
        }
        return;
      }

      if ($clickedElement.matches(".menu-link")) closeMenu();
    }

    $menuBtn.addEventListener("click", handleClickMenuBtn);
    $menu.addEventListener("click", handleClickMenu);
  });
</script>

<style is:global>
  body:has(.menu.open) {
    & .hamburger-icon {
      display: none;
    }

    & .close-menu-icon {
      display: block;
    }

    & .hero-video {
      filter: blur(6px);
    }

    & .hero-links {
      display: none;
    }

    @media (width < 768px) {
      overflow: hidden;
    }
  }

  body:not(:has(.menu.open)) {
    & .hamburger-icon {
      display: block;
    }

    & .close-menu-icon {
      display: none;
    }
  }

  .menu > ul > li ul {
    padding-left: 1rem;

    @media (width >= 768px) {
      padding-left: 0;
    }
  }

  .menu > ul > li > ul {
    @media (width >= 768px) {
      position: absolute;
      border: 1px solid gray;
      backdrop-filter: blur(6px);
      border-bottom: none;
      min-width: 16rem;
      max-width: 24rem;
      right: 0;
      background-color: var(--header-bg-color);
    }
  }

  .menu > ul > li > ul ul {
    @media (width >= 768px) {
      position: absolute;
      border: 1px solid gray;
      backdrop-filter: blur(6px);
      border-bottom: none;
      min-width: 16rem;
      max-width: 24rem;
      top: -1px;
      transform: translateX(-100%);
      background-color: var(--header-bg-color);
    }
  }
</style>

<style>
  .main-header {
    overflow-y: auto;
    scrollbar-width: thin;

    @media (width >= 768px) {
      overflow-y: visible;
    }

    > div {
      @media (width < 768px) {
        header:has(.menu.open) & {
          height: 100dvh;
        }
      }
    }
  }

  .menu {
    padding-block: 1rem;
    grid-column: 1/3;

    &.open {
      display: block;
    }
  }

  .menu-btn {
    transition: scale 0.3s;

    &:is(:hover, :focus-visible) {
      scale: 1.05;
    }

    @media (scripting: none) {
      display: none;
    }
  }
</style>
