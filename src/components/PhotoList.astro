---
import XIcon from "./icons/XIcon.astro";

const photos = [
  { src: "photos/photo1.avif" },
  { src: "photos/photo2.avif" },
  { src: "photos/photo3.avif" },
  { src: "photos/photo4.avif" },
  { src: "photos/photo8.avif" },
  { src: "photos/photo9.avif" },
  { src: "photos/photo10.avif" },
  { src: "photos/photo11.avif" },
  { src: "photos/photo12.avif" },
  { src: "photos/photo13.avif" },
  { src: "photos/photo14.avif" },
  { src: "photos/photo15.avif" },
  { src: "photos/photo16.avif" },
  { src: "photos/photo17.avif" },
  { src: "photos/photo18.avif" },
  { src: "photos/photo19.avif" },
  { src: "photos/photo20.avif" },
  { src: "photos/photo21.avif" },
  { src: "photos/photo22.avif" },
  { src: "photos/photo23.avif" },
  { src: "photos/photo24.avif" },
  { src: "photos/photo25.avif" },
  { src: "photos/photo26.avif" },
  { src: "photos/photo27.avif" },
  { src: "photos/photo28.avif" },
  { src: "photos/photo29.avif" },
  { src: "photos/photo30.avif" },
  { src: "photos/photo31.avif" },
  { src: "photos/photo32.avif" },
  { src: "photos/photo33.avif" },
  { src: "photos/photo34.avif" },
  { src: "photos/photo35.avif" },
  { src: "photos/photo36.avif" },
  { src: "photos/photo37.avif" },
  { src: "photos/photo38.avif" },
  { src: "photos/photo39.avif" },
  { src: "photos/photo40.avif" },
  { src: "photos/photo41.avif" },
  { src: "photos/photo42.avif" },
  { src: "photos/photo43.avif" },
  { src: "photos/photo44.avif" },
  { src: "photos/photo45.avif" },
  { src: "photos/photo46.avif" },
  { src: "photos/photo47.avif" },
  { src: "photos/photo48.avif" },
];
---

<div
  class="photo_list grid grid-cols-[repeat(auto-fill,minmax(min(11rem,100%),1fr))] gap-4"
>
  {
    photos.map((photo, index) => {
      return (
        <button
          data-index={index}
          class="rounded overflow-hidden relative max-sm:after:content-[url('/hand-click.svg')_'_Pulsa_para_expandir_la_imagen'] sm:after:content-[url('/click.svg')_'_Haz_click_para_expandir_la_imagen'] sm:after:opacity-0 sm:after:absolute sm:after:bottom-5 sm:hover:after:bottom-2 sm:hover:after:opacity-100 sm:focus-visible:after:bottom-2 sm:focus-visible:after:opacity-100 sm:after:transition-all sm:after:duration-500 after:text-white after:absolute after:bottom-2 after:right-0 after:left-0 after:text-center after:text-xs after:text-balance after:px-1 after:[text-shadow:0px_0px_4px_black] cursor-zoom-in group bg-black shadow-xl shadow-black active:translate-y-1"
        >
          <img
            src={photo.src}
            class="photo w-full aspect-[3/4] object-cover group-hover:scale-110 group-focus-visible:scale-105 sm:grayscale sm:group-hover:grayscale-0 sm:group-focus-visible:grayscale-0 group-hover:rotate-3 group-focus-visible:rotate-12"
            loading="lazy"
          />
        </button>
      );
    })
  }
</div>
<dialog
  class="photo_slider-modal w-11/12 max-w-screen-lg rounded backdrop:backdrop-blur-lg backdrop:cursor-zoom-out shadow-xl shadow-black"
>
  <div class="photo_slider">
    <button
      class="close_modal-btn absolute top-1 right-1 z-10 bg-black text-white border rounded-md p-1 opacity-70 hover:scale-105 hover:opacity-100 focus-visible:scale-105 focus-visible:opacity-100 transition-all duration-300"
      title="Salir"><XIcon /></button
    >
    {
      photos.map((photo) => (
        <div class="photo_slide">
          <img src={photo.src} />
        </div>
      ))
    }
    <div
      class="absolute opacity-70 bottom-1 left-0 right-0 mx-auto w-fit z-10 px-2 py-1 bg-black text-white border rounded-md"
    >
      <span class="photo_counter">1</span>/{photos.length}
    </div>
    <button class="photo_slider-prev-btn"
      ><img src="/chevron-up-white.svg" /></button
    >
    <button class="photo_slider-next-btn"
      ><img src="/chevron-up-white.svg" /></button
    >
  </div>
</dialog>

<style is:global>
  body:has(.photo_slider-modal[open]) {
    overflow-y: hidden;
  }
</style>

<style>
  .photo {
    mask-image: linear-gradient(to bottom, black 50%, transparent 95%);
    transition:
      transform 0.5s,
      filter 0.5s;

    @media (width >= 640px) {
      mask-image: none;

      .photo_list > button:is(:hover, :focus) & {
        mask-image: linear-gradient(to bottom, black 50%, transparent 95%);
      }
    }
  }

  .photo_slider-modal {
    opacity: 0;
    transition:
      display 0.3s,
      overlay 0.3s,
      opacity 0.3s;
    transition-behavior: allow-discrete;

    &[open] {
      opacity: 1;

      @starting-style {
        opacity: 0;
      }
    }
  }

  .photo_slider {
    position: relative;
    width: 100%;
    margin-inline: auto;
    border-radius: 0.25rem;
    overflow: hidden;
    aspect-ratio: 16/9;
    background-color: #000;
  }

  .photo_slide {
    position: absolute;
    height: 100%;
    width: 100%;
    background-color: #000;
    transition: 0.01s clip-path 0.6s;
    clip-path: polygon(50% 0, 50% 0, 50% 100%, 50% 100%);

    &.active {
      z-index: 1;
      transition: 0.6s clip-path;
      clip-path: polygon(0 0, 100% 0%, 100% 100%, 0% 100%);
    }

    > img {
      height: 100%;
      margin-inline: auto;
      object-fit: cover;
    }
  }

  .photo_slider-prev-btn,
  .photo_slider-next-btn {
    position: absolute;
    z-index: 10;
    top: 50%;
    transform: translateY(-50%);
    background-color: black;
    color: #fff;
    border: none;
    padding: 0.5rem;
    border: 1px solid white;
    border-radius: 100%;
    cursor: pointer;
    transition:
      scale 0.3s,
      opacity 0.3s;
    opacity: 0.7;

    &:hover,
    &:focus-visible {
      scale: 1.05;
      opacity: 1;
    }
  }

  .photo_slider-prev-btn {
    left: 10px;

    img {
      rotate: -90deg;
      translate: -5px 0;
    }
  }

  .photo_slider-next-btn {
    right: 10px;

    img {
      rotate: 90deg;
      translate: 5px 0;
    }
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const $photoList = document.querySelector(".photo_list");
    const $$photosButtons = $photoList.querySelectorAll("button");
    const $photoSliderModal = document.querySelector(
      ".photo_slider-modal"
    ) as HTMLDialogElement;
    const $photoSlider = $photoSliderModal.querySelector(".photo_slider");
    const $$slides = [...$photoSliderModal.querySelectorAll(".photo_slide")];
    const $prevBtn = $photoSliderModal.querySelector(".photo_slider-prev-btn");
    const $nextBtn = $photoSliderModal.querySelector(".photo_slider-next-btn");
    const $closeDialogBtn = $photoSliderModal.querySelector(".close_modal-btn");
    const $counter = $photoSliderModal.querySelector(".photo_counter");

    let slideIndex = 0;
    const totalSlides = $$slides.length;

    function showSlide() {
      $counter.textContent = slideIndex + 1 + "";
      $$slides.forEach(($slide) => $slide.classList.remove("active"));
      $$slides[slideIndex].classList.add("active");
    }

    function handleClickPhoto(e) {
      const $photoButton = e.target.closest("button");
      slideIndex = +$photoButton.dataset.index;
      showSlide();
      $photoSliderModal.showModal();
    }

    function handleClickInPhotoModal(e) {
      if (e.target.matches(".photo_slider-modal")) {
        // click in backdrop
        $photoSliderModal.close();
      }
    }

    function nextSlide() {
      if (slideIndex < totalSlides - 1) {
        slideIndex++;
      } else {
        slideIndex = 0;
      }
      showSlide();
    }

    function prevSlide() {
      if (slideIndex > 0) {
        slideIndex--;
      } else {
        slideIndex = totalSlides - 1;
      }
      showSlide();
    }

    function slide(e) {
      if ($photoSliderModal.open) {
        const keypress = e.key;
        if (keypress === "ArrowLeft") {
          prevSlide();
          return;
        }
        if (keypress === "ArrowRight") {
          nextSlide();
          return;
        }
      }
    }

    let touchstartX = 0;
    let touchendX = 0;

    function handleGesture() {
      if (touchendX < touchstartX) {
        nextSlide();
        return;
      }
      if (touchendX > touchstartX) {
        prevSlide();
        return;
      }
    }

    function handleTouchStart(e) {
      touchstartX = e.changedTouches[0].screenX;
    }

    function handleTouchEnd(e) {
      touchendX = e.changedTouches[0].screenX;
      handleGesture();
    }

    $$photosButtons.forEach((photo) =>
      photo.addEventListener("click", handleClickPhoto)
    );
    $photoSliderModal.addEventListener("click", handleClickInPhotoModal);
    $photoSlider.addEventListener("touchstart", handleTouchStart);
    $photoSlider.addEventListener("touchend", handleTouchEnd);
    $nextBtn.addEventListener("click", nextSlide);
    $prevBtn.addEventListener("click", prevSlide);
    $closeDialogBtn.addEventListener("click", () => $photoSliderModal.close());
    document.addEventListener("keydown", slide);
  });
</script>
