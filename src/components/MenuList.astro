---
const { items } = Astro.props;
---

<ul>
  {
    items.map((item) => (
      <li class="md:relative">
        {item.links ? (       
            <button class="dropdown block w-full text-left relative cursor-pointer border-b border-black after:content-[url('/chevron-down-black.svg')] after:absolute after:right-0 md:after:top-[-3px] after:scale-75 after:transition-[rotate] md:hover:after:[rotate:180deg] pt-5 pb-1 pr-6 md:pl-6 md:py-3">
              {item.text}
            </button>
            <Astro.self items={item.links} />
        ) : (
          <a href={item.href} class="link block border-b border-black pt-5 pb-1 md:px-6 md:py-3 transition-colors duration-300">
            {item.text}
          </a>
        )}
      </li>
    ))
  }
</ul>

<style>
  li > ul {
    display: none;
    
    &.open {
      @media (width < 768px) {
        display: block;
        
    }
  }

  @media (width >= 768px) {
    display: block;
    opacity: 0;
    transition: opacity .3s;
    pointer-events: none;

    .dropdown::after {
        top: 10px;   
    }
  }
  
  
}

li:hover > ul {
  @media (width >= 768px) {
    opacity: 1;
    pointer-events: all;
    }
  }

  @media (width < 768px) {
    li:has(ul.open) > .dropdown::after {
      rotate: 180deg;
    }
  }

  @media (width >= 768px) {
    li:has(ul:hover) > .dropdown::after {
      rotate: 180deg;
    }
  }
</style>
