---
export const prerender = false;

import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "@/layouts/Layout.astro";

/* Verificar si el usuario está autenticado */
const auth = getAuth(app);
if (Astro.cookies.has("__session")) {
  const sessionCookie = Astro.cookies.get("__session").value;
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (decodedCookie) {
    return Astro.redirect("/dashboard");
  }
}
---

<Layout
  title="Login - Comuna de Villa Ana"
  description="Login - Comuna de Villa Ana"
>
  <form action="/api/auth/login" method="post" class="login-form">
    <h1>Iniciar sesión</h1>
    <label>
      <span> Correo electrónico </span>
      <input type="email" name="email" />
    </label>
    <label>
      <span> Contraseña </span>
      <input type="password" name="password" />
    </label>
    <button type="submit">Iniciar sesión</button>
  </form>
</Layout>

<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
  } from "firebase/auth";
  import { app } from "../firebase/client";

  const auth = getAuth(app);
  // Esto evitará que el navegador almacene los datos de sesión
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector("form") as HTMLFormElement;
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      return;
    }
    const userCredential = await signInWithEmailAndPassword(
      auth,
      email,
      password
    );
    const idToken = await userCredential.user.getIdToken();
    const response = await fetch("/api/auth/login", {
      method: "GET",
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (response.redirected) {
      window.location.assign(response.url);
    }
  });
</script>

<style>
  .login-form {
    margin-inline: auto;
  }
</style>
